import { Color, ContentView, CssProperty, Property, Style } from '@nativescript/core';
export class PullToRefreshBase extends ContentView {
}
PullToRefreshBase.refreshEvent = 'refresh';
export const refreshingProperty = new Property({
    name: 'refreshing',
    defaultValue: false
});
refreshingProperty.register(PullToRefreshBase);
export const indicatorColorProperty = new Property({
    name: 'indicatorColor',
    affectsLayout: true,
    valueConverter: (v) => {
        if (!Color.isValid(v)) {
            return null;
        }
        return new Color(v);
    }
});
indicatorColorProperty.register(PullToRefreshBase);
export const indicatorColorStyleProperty = new CssProperty({
    name: 'indicatorColorStyle',
    cssName: 'indicator-color',
    affectsLayout: true,
    valueConverter: (v) => {
        if (!Color.isValid(v)) {
            return null;
        }
        return new Color(v);
    }
});
indicatorColorStyleProperty.register(Style);
export const indicatorFillColorProperty = new Property({
    name: 'indicatorFillColor',
    affectsLayout: true,
    valueConverter: (v) => {
        if (!Color.isValid(v)) {
            return null;
        }
        return new Color(v);
    }
});
indicatorFillColorProperty.register(PullToRefreshBase);
export const indicatorFillColorStyleProperty = new CssProperty({
    name: 'indicatorFillColorStyle',
    cssName: 'indicator-fill-color',
    affectsLayout: true,
    valueConverter: (v) => {
        if (!Color.isValid(v)) {
            return null;
        }
        return new Color(v);
    }
});
indicatorFillColorStyleProperty.register(Style);
//# sourceMappingURL=pulltorefresh-common.js.map