import { Component, ViewChild } from '@angular/core';
import { Page } from '@nativescript/core';
import { PageRouterOutlet } from './page-router-outlet';
export class NSEmptyOutletComponent {
    constructor(page) {
        this.page = page;
        if (this.page) {
            this.page.actionBarHidden = true;
            this.page.on('loaded', () => {
                if (this.pageRouterOutlet && this.page.frame) {
                    this.pageRouterOutlet.setActionBarVisibility(this.page.frame.actionBarVisibility);
                }
            });
        }
    }
}
NSEmptyOutletComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'ns-empty-outlet',
                template: "<page-router-outlet isEmptyOutlet='true'></page-router-outlet>"
            },] }
];
NSEmptyOutletComponent.ctorParameters = () => [
    { type: Page }
];
NSEmptyOutletComponent.propDecorators = {
    pageRouterOutlet: [{ type: ViewChild, args: [PageRouterOutlet, { read: PageRouterOutlet, static: false },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnMtZW1wdHktb3V0bGV0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3JvdXRlci9ucy1lbXB0eS1vdXRsZXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUMxQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQU14RCxNQUFNLE9BQU8sc0JBQXNCO0lBRWxDLFlBQW9CLElBQVU7UUFBVixTQUFJLEdBQUosSUFBSSxDQUFNO1FBQzdCLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtZQUNkLElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztZQUVqQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsR0FBRyxFQUFFO2dCQUMzQixJQUFJLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRTtvQkFDN0MsSUFBSSxDQUFDLGdCQUFnQixDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLG1CQUFtQixDQUFDLENBQUM7aUJBQ2xGO1lBQ0YsQ0FBQyxDQUFDLENBQUM7U0FDSDtJQUNGLENBQUM7OztZQWpCRCxTQUFTLFNBQUM7Z0JBQ1YsOENBQThDO2dCQUM5QyxRQUFRLEVBQUUsaUJBQWlCO2dCQUMzQixRQUFRLEVBQUUsZ0VBQWdFO2FBQzFFOzs7WUFOUSxJQUFJOzs7K0JBUVgsU0FBUyxTQUFDLGdCQUFnQixFQUFFLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUGFnZSB9IGZyb20gJ0BuYXRpdmVzY3JpcHQvY29yZSc7XG5pbXBvcnQgeyBQYWdlUm91dGVyT3V0bGV0IH0gZnJvbSAnLi9wYWdlLXJvdXRlci1vdXRsZXQnO1xuQENvbXBvbmVudCh7XG5cdC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpjb21wb25lbnQtc2VsZWN0b3Jcblx0c2VsZWN0b3I6ICducy1lbXB0eS1vdXRsZXQnLFxuXHR0ZW1wbGF0ZTogXCI8cGFnZS1yb3V0ZXItb3V0bGV0IGlzRW1wdHlPdXRsZXQ9J3RydWUnPjwvcGFnZS1yb3V0ZXItb3V0bGV0PlwiLFxufSlcbmV4cG9ydCBjbGFzcyBOU0VtcHR5T3V0bGV0Q29tcG9uZW50IHtcblx0QFZpZXdDaGlsZChQYWdlUm91dGVyT3V0bGV0LCB7IHJlYWQ6IFBhZ2VSb3V0ZXJPdXRsZXQsIHN0YXRpYzogZmFsc2UgfSkgcGFnZVJvdXRlck91dGxldDogUGFnZVJvdXRlck91dGxldDtcblx0Y29uc3RydWN0b3IocHJpdmF0ZSBwYWdlOiBQYWdlKSB7XG5cdFx0aWYgKHRoaXMucGFnZSkge1xuXHRcdFx0dGhpcy5wYWdlLmFjdGlvbkJhckhpZGRlbiA9IHRydWU7XG5cblx0XHRcdHRoaXMucGFnZS5vbignbG9hZGVkJywgKCkgPT4ge1xuXHRcdFx0XHRpZiAodGhpcy5wYWdlUm91dGVyT3V0bGV0ICYmIHRoaXMucGFnZS5mcmFtZSkge1xuXHRcdFx0XHRcdHRoaXMucGFnZVJvdXRlck91dGxldC5zZXRBY3Rpb25CYXJWaXNpYmlsaXR5KHRoaXMucGFnZS5mcmFtZS5hY3Rpb25CYXJWaXNpYmlsaXR5KTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0fVxuXHR9XG59XG4iXX0=