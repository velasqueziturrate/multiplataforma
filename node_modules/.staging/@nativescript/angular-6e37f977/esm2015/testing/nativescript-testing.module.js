import { NgModule } from '@angular/core';
import { TestComponentRenderer } from '@angular/core/testing';
import { COMMON_PROVIDERS, APP_ROOT_VIEW } from '@nativescript/angular';
import { NativeScriptTestComponentRenderer } from './nativescript_test_component_renderer';
import { testingRootView } from './test-root-view';
const ɵ0 = testingRootView;
/**
 * Providers array is exported for cases where a custom module has to be constructed
 * to test a particular piece of code. This can happen, for example, if you are trying
 * to test dynamic component loading and need to specify an entryComponent for the testing
 * module.
 */
export const NATIVESCRIPT_TESTING_PROVIDERS = [COMMON_PROVIDERS, { provide: APP_ROOT_VIEW, useFactory: ɵ0 }, { provide: TestComponentRenderer, useClass: NativeScriptTestComponentRenderer }];
/**
 * NativeScript testing support module. Enables use of TestBed for angular components, directives,
 * pipes, and services.
 */
export class NativeScriptTestingModule {
}
NativeScriptTestingModule.decorators = [
    { type: NgModule, args: [{
                providers: NATIVESCRIPT_TESTING_PROVIDERS,
            },] }
];
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlc2NyaXB0LXRlc3RpbmcubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vdGVzdGluZy9zcmMvbmF0aXZlc2NyaXB0LXRlc3RpbmcubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzNGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztXQVEyRCxlQUFlO0FBTjdIOzs7OztHQUtHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sOEJBQThCLEdBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxFQUFFLE9BQU8sRUFBRSxhQUFhLEVBQUUsVUFBVSxJQUFpQixFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsUUFBUSxFQUFFLGlDQUFpQyxFQUFFLENBQUMsQ0FBQztBQUVsTjs7O0dBR0c7QUFJSCxNQUFNLE9BQU8seUJBQXlCOzs7WUFIckMsUUFBUSxTQUFDO2dCQUNULFNBQVMsRUFBRSw4QkFBOEI7YUFDekMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGVzdENvbXBvbmVudFJlbmRlcmVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZS90ZXN0aW5nJztcbmltcG9ydCB7IENPTU1PTl9QUk9WSURFUlMsIEFQUF9ST09UX1ZJRVcgfSBmcm9tICdAbmF0aXZlc2NyaXB0L2FuZ3VsYXInO1xuaW1wb3J0IHsgTmF0aXZlU2NyaXB0VGVzdENvbXBvbmVudFJlbmRlcmVyIH0gZnJvbSAnLi9uYXRpdmVzY3JpcHRfdGVzdF9jb21wb25lbnRfcmVuZGVyZXInO1xuaW1wb3J0IHsgdGVzdGluZ1Jvb3RWaWV3IH0gZnJvbSAnLi90ZXN0LXJvb3Qtdmlldyc7XG5cbi8qKlxuICogUHJvdmlkZXJzIGFycmF5IGlzIGV4cG9ydGVkIGZvciBjYXNlcyB3aGVyZSBhIGN1c3RvbSBtb2R1bGUgaGFzIHRvIGJlIGNvbnN0cnVjdGVkXG4gKiB0byB0ZXN0IGEgcGFydGljdWxhciBwaWVjZSBvZiBjb2RlLiBUaGlzIGNhbiBoYXBwZW4sIGZvciBleGFtcGxlLCBpZiB5b3UgYXJlIHRyeWluZ1xuICogdG8gdGVzdCBkeW5hbWljIGNvbXBvbmVudCBsb2FkaW5nIGFuZCBuZWVkIHRvIHNwZWNpZnkgYW4gZW50cnlDb21wb25lbnQgZm9yIHRoZSB0ZXN0aW5nXG4gKiBtb2R1bGUuXG4gKi9cbmV4cG9ydCBjb25zdCBOQVRJVkVTQ1JJUFRfVEVTVElOR19QUk9WSURFUlM6IGFueVtdID0gW0NPTU1PTl9QUk9WSURFUlMsIHsgcHJvdmlkZTogQVBQX1JPT1RfVklFVywgdXNlRmFjdG9yeTogdGVzdGluZ1Jvb3RWaWV3IH0sIHsgcHJvdmlkZTogVGVzdENvbXBvbmVudFJlbmRlcmVyLCB1c2VDbGFzczogTmF0aXZlU2NyaXB0VGVzdENvbXBvbmVudFJlbmRlcmVyIH1dO1xuXG4vKipcbiAqIE5hdGl2ZVNjcmlwdCB0ZXN0aW5nIHN1cHBvcnQgbW9kdWxlLiBFbmFibGVzIHVzZSBvZiBUZXN0QmVkIGZvciBhbmd1bGFyIGNvbXBvbmVudHMsIGRpcmVjdGl2ZXMsXG4gKiBwaXBlcywgYW5kIHNlcnZpY2VzLlxuICovXG5ATmdNb2R1bGUoe1xuXHRwcm92aWRlcnM6IE5BVElWRVNDUklQVF9URVNUSU5HX1BST1ZJREVSUyxcbn0pXG5leHBvcnQgY2xhc3MgTmF0aXZlU2NyaXB0VGVzdGluZ01vZHVsZSB7fVxuIl19