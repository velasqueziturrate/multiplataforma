import { CommonModule } from '@angular/common';
import { NO_ERRORS_SCHEMA, NgModule } from '@angular/core';
import { ModalDialogService } from './directives/dialogs';
import { defaultDeviceProvider, defaultFrameProvider, defaultPageProvider } from './platform-providers';
import { ListViewComponent } from './directives/list-view-comp';
import { TemplateKeyDirective } from './directives/templated-items-comp';
import { TabViewDirective, TabViewItemDirective } from './directives/tab-view';
import { ActionBarComponent, ActionBarScope, ActionItemDirective, NavigationButtonDirective } from './directives/action-bar';
import { AndroidFilterComponent, IosFilterComponent } from './directives/platform-filters';
export class NativeScriptCommonModule {
}
NativeScriptCommonModule.decorators = [
    { type: NgModule, args: [{
                declarations: [ListViewComponent, TemplateKeyDirective, TabViewDirective, TabViewItemDirective, ActionBarComponent, ActionBarScope, ActionItemDirective, NavigationButtonDirective, AndroidFilterComponent, IosFilterComponent],
                providers: [ModalDialogService, defaultDeviceProvider, defaultFrameProvider, defaultPageProvider],
                imports: [CommonModule],
                exports: [CommonModule, ListViewComponent, TemplateKeyDirective, TabViewDirective, TabViewItemDirective, ActionBarComponent, ActionBarScope, ActionItemDirective, NavigationButtonDirective, AndroidFilterComponent, IosFilterComponent],
                schemas: [NO_ERRORS_SCHEMA],
            },] }
];
export * from './directives';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vY29tbW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQzFELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxvQkFBb0IsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hHLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3pFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQy9FLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxjQUFjLEVBQUUsbUJBQW1CLEVBQUUseUJBQXlCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM3SCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQVMzRixNQUFNLE9BQU8sd0JBQXdCOzs7WUFQcEMsUUFBUSxTQUFDO2dCQUNULFlBQVksRUFBRSxDQUFDLGlCQUFpQixFQUFFLG9CQUFvQixFQUFFLGdCQUFnQixFQUFFLG9CQUFvQixFQUFFLGtCQUFrQixFQUFFLGNBQWMsRUFBRSxtQkFBbUIsRUFBRSx5QkFBeUIsRUFBRSxzQkFBc0IsRUFBRSxrQkFBa0IsQ0FBQztnQkFDL04sU0FBUyxFQUFFLENBQUMsa0JBQWtCLEVBQUUscUJBQXFCLEVBQUUsb0JBQW9CLEVBQUUsbUJBQW1CLENBQUM7Z0JBQ2pHLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQztnQkFDdkIsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLGlCQUFpQixFQUFFLG9CQUFvQixFQUFFLGdCQUFnQixFQUFFLG9CQUFvQixFQUFFLGtCQUFrQixFQUFFLGNBQWMsRUFBRSxtQkFBbUIsRUFBRSx5QkFBeUIsRUFBRSxzQkFBc0IsRUFBRSxrQkFBa0IsQ0FBQztnQkFDeE8sT0FBTyxFQUFFLENBQUMsZ0JBQWdCLENBQUM7YUFDM0I7O0FBR0QsY0FBYyxjQUFjLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTk9fRVJST1JTX1NDSEVNQSwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgTW9kYWxEaWFsb2dTZXJ2aWNlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2RpYWxvZ3MnO1xuaW1wb3J0IHsgZGVmYXVsdERldmljZVByb3ZpZGVyLCBkZWZhdWx0RnJhbWVQcm92aWRlciwgZGVmYXVsdFBhZ2VQcm92aWRlciB9IGZyb20gJy4vcGxhdGZvcm0tcHJvdmlkZXJzJztcbmltcG9ydCB7IExpc3RWaWV3Q29tcG9uZW50IH0gZnJvbSAnLi9kaXJlY3RpdmVzL2xpc3Qtdmlldy1jb21wJztcbmltcG9ydCB7IFRlbXBsYXRlS2V5RGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL3RlbXBsYXRlZC1pdGVtcy1jb21wJztcbmltcG9ydCB7IFRhYlZpZXdEaXJlY3RpdmUsIFRhYlZpZXdJdGVtRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL3RhYi12aWV3JztcbmltcG9ydCB7IEFjdGlvbkJhckNvbXBvbmVudCwgQWN0aW9uQmFyU2NvcGUsIEFjdGlvbkl0ZW1EaXJlY3RpdmUsIE5hdmlnYXRpb25CdXR0b25EaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvYWN0aW9uLWJhcic7XG5pbXBvcnQgeyBBbmRyb2lkRmlsdGVyQ29tcG9uZW50LCBJb3NGaWx0ZXJDb21wb25lbnQgfSBmcm9tICcuL2RpcmVjdGl2ZXMvcGxhdGZvcm0tZmlsdGVycyc7XG5cbkBOZ01vZHVsZSh7XG5cdGRlY2xhcmF0aW9uczogW0xpc3RWaWV3Q29tcG9uZW50LCBUZW1wbGF0ZUtleURpcmVjdGl2ZSwgVGFiVmlld0RpcmVjdGl2ZSwgVGFiVmlld0l0ZW1EaXJlY3RpdmUsIEFjdGlvbkJhckNvbXBvbmVudCwgQWN0aW9uQmFyU2NvcGUsIEFjdGlvbkl0ZW1EaXJlY3RpdmUsIE5hdmlnYXRpb25CdXR0b25EaXJlY3RpdmUsIEFuZHJvaWRGaWx0ZXJDb21wb25lbnQsIElvc0ZpbHRlckNvbXBvbmVudF0sXG5cdHByb3ZpZGVyczogW01vZGFsRGlhbG9nU2VydmljZSwgZGVmYXVsdERldmljZVByb3ZpZGVyLCBkZWZhdWx0RnJhbWVQcm92aWRlciwgZGVmYXVsdFBhZ2VQcm92aWRlcl0sXG5cdGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuXHRleHBvcnRzOiBbQ29tbW9uTW9kdWxlLCBMaXN0Vmlld0NvbXBvbmVudCwgVGVtcGxhdGVLZXlEaXJlY3RpdmUsIFRhYlZpZXdEaXJlY3RpdmUsIFRhYlZpZXdJdGVtRGlyZWN0aXZlLCBBY3Rpb25CYXJDb21wb25lbnQsIEFjdGlvbkJhclNjb3BlLCBBY3Rpb25JdGVtRGlyZWN0aXZlLCBOYXZpZ2F0aW9uQnV0dG9uRGlyZWN0aXZlLCBBbmRyb2lkRmlsdGVyQ29tcG9uZW50LCBJb3NGaWx0ZXJDb21wb25lbnRdLFxuXHRzY2hlbWFzOiBbTk9fRVJST1JTX1NDSEVNQV0sXG59KVxuZXhwb3J0IGNsYXNzIE5hdGl2ZVNjcmlwdENvbW1vbk1vZHVsZSB7fVxuXG5leHBvcnQgKiBmcm9tICcuL2RpcmVjdGl2ZXMnO1xuIl19