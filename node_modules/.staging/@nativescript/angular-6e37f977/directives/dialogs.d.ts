import { ComponentFactoryResolver, NgModuleRef, Type, ViewContainerRef } from '@angular/core';
import { View, ViewBase, ShowModalOptions } from '@nativescript/core';
import { NSLocationStrategy } from '../router/ns-location-strategy';
import { PageFactory } from '../platform-providers';
export declare type BaseShowModalOptions = Pick<ShowModalOptions, Exclude<keyof ShowModalOptions, 'closeCallback' | 'context'>>;
export interface ModalDialogOptions extends BaseShowModalOptions {
    context?: any;
    viewContainerRef?: ViewContainerRef;
    moduleRef?: NgModuleRef<any>;
    target?: View;
}
export interface ShowDialogOptions extends BaseShowModalOptions {
    containerRef: ViewContainerRef;
    context: any;
    doneCallback: any;
    pageFactory: PageFactory;
    parentView: ViewBase;
    resolver: ComponentFactoryResolver;
    type: Type<any>;
}
export declare class ModalDialogParams {
    context: any;
    closeCallback: (...args: any[]) => any;
    constructor(context: any, closeCallback: (...args: any[]) => any);
}
export declare class ModalDialogService {
    private location;
    constructor(location: NSLocationStrategy);
    showModal(type: Type<any>, options: ModalDialogOptions): Promise<any>;
    private _showDialog;
}
